{% extends 'base.html.twig' %}
{% block body %}
<div class="container">
    <div class="py-5 text-center">
        <h2>Formulaire de paiement</h2>
    </div>
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Votre panier</span>
                <span class="badge badge-secondary badge-pill">3</span>
            </h4>
            <ul class="list-group mb-3 sticky-top">
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">x2 Paquet de 50 vis </h6>
                        <small class="text-muted">Brief description</small>
                    </div>
                    <span class="text-muted">8.99 €</span>
                </li>
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">Tournevis Cruciforme</h6>
                        <small class="text-muted">Brief description</small>
                    </div>
                    <span class="text-muted">4.99 €</span>
                </li>
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">x10 2m plancher bois d'ébêne</h6>
                        <small class="text-muted"></small>
                    </div>
                    <span class="text-muted">84 €</span>
                </li>
                <li class="list-group-item d-flex justify-content-between bg-light">
                    <div class="text-success">
                        <h6 class="my-0">Code promotionnel</h6>
                        <small>ManoMano5</small>
                    </div>
                    <span class="text-success">-5 €</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total (€)</span>
                    <strong>97.98 €</strong>
                </li>
            </ul>
            <form class="card p-2">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Code promotionnel">
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-secondary">Appliquer</button>
                    </div>
                </div>
                <div style="margin-top: 1rem" class="input-group">
                <div class="input-group-append">
                    <button type="submit" style="padding-right: 0.8rem" class="btn btn-success">Partager le panier</button>
                </div>
                <div class="input-group-append">
            <button type="submit" style="color: white; margin-left: 3.7rem" class="btn btn-primary">Sauvegarder le panier</button>
        </div>
            </div>
            </form>
        </div>
        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">Addresse de livraison</h4>
            <form class="needs-validation" novalidate="">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="firstName">Nom de famille</label>
                        <input type="text" class="form-control" id="firstName" placeholder="Dupont" value="" required="">
                        <div class="invalid-feedback"> Valid first name is required. </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="lastName">Prénom</label>
                        <input type="text" class="form-control" id="lastName" placeholder="Thierry" value="" required="">
                        <div class="invalid-feedback"> Valid last name is required. </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label for="email">Email <span class="text-muted">(Optionnel)</span></label>
                    <input type="email" class="form-control" id="email" placeholder="johndoe@gmail.com">
                    <div class="invalid-feedback"> Please enter a valid email address for shipping updates. </div>
                </div>
                <div class="mb-3">
                    <label for="address">Adresse</label>
                    <input type="text" class="form-control" id="address" placeholder="6 rue de Saint Brice" required="">
                    <div class="invalid-feedback"> Please enter your shipping address. </div>
                </div>
                <div class="mb-3">
                    <label for="address2">Adresse secondaire <span class="text-muted">(Optionel)</span></label>
                    <input type="text" class="form-control" id="address2" placeholder="Appartement..">
                </div>
                <div class="row">
                    <div class="col-md-5 mb-3">
                        <label for="country">Pays</label>
                        <select class="custom-select d-block w-100" id="country" required="">
                            <option value="">Choisir un pays...</option>
                            <option>France</option>
                        </select>
                        <div class="invalid-feedback"> Please select a valid country. </div>
                    </div>
                    <div class="col-md-4 mb-3">
                        <label for="state">Région</label>
                        <select class="custom-select d-block w-100" id="state" required="">
                            <option value="">Choisir une région..</option>
                            <option>Grand Est</option>
                        </select>
                        <div class="invalid-feedback"> Please provide a valid state. </div>
                    </div>
                    <div class="col-md-3 mb-3">
                        <label for="zip">Code Postal</label>
                        <input type="text" class="form-control" id="zip" placeholder="" required="">
                        <div class="invalid-feedback"> Zip code required. </div>
                    </div>
                </div>
                <hr class="mb-4">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="same-address">
                    <label class="custom-control-label" for="same-address">L'adresse de livraison est la même que celle de paiement.</label>
                </div>
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="save-info">
                    <label class="custom-control-label" for="save-info">Sauvegarder ces informations pour la prochaine fois.</label>
                </div>
                <hr class="mb-4">
  <script type='text/javascript' src=''></script>
                                <script type='text/javascript' src='https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js'></script>
                                <script type='text/javascript' src=''></script>
                            </head>
                            <body oncontextmenu='return false' class='snippet-body'>
                            <div class="wrapper" id="app">
    <div class="card-form">
        <div class="card-list">
            <div class="card-item" v-bind:class="{ '-active' : isCardFlipped }">
                <div class="card-item__side -front">
                    <div class="card-item__focus" v-bind:class="{'-active' : focusElementStyle }" v-bind:style="focusElementStyle" ref="focusElement"></div>
                    <div class="card-item__cover">
                        <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + currentCardBackground + '.jpeg'" class="card-item__bg">
                    </div>

                    <div class="card-item__wrapper">
                        <div class="card-item__top">
                            <img src="https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/chip.png" class="card-item__chip">
                            <div class="card-item__type">
                                <transition name="slide-fade-up">
                                    <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + getCardType + '.png'" v-if="getCardType" v-bind:key="getCardType" alt="" class="card-item__typeImg">
                                </transition>
                            </div>
                        </div>
                        <label for="cardNumber" class="card-item__number" ref="cardNumber">
                            <template v-if="getCardType === 'amex'">
                                <span v-for="(n, $index) in amexCardMask" :key="$index">
                                    <transition name="slide-fade-up">
                                        <div class="card-item__numberItem" v-if="$index > 4 && $index < 14 && cardNumber.length > $index && n.trim() !== ''">*</div>
                                        <div class="card-item__numberItem" :class="{ '-active' : n.trim() === '' }" :key="$index" v-else-if="cardNumber.length > $index">
                                           {% verbatim %} {{cardNumber[$index]}}{% endverbatim %}
                                        </div>
                                        <div class="card-item__numberItem" :class="{ '-active' : n.trim() === '' }" v-else :key="$index + 1">{% verbatim %}{{n}}{% endverbatim %}</div>
                                    </transition>
                                </span>
                            </template>

                            <template v-else>
                                <span v-for="(n, $index) in otherCardMask" :key="$index">
                                    <transition name="slide-fade-up">
                                        <div class="card-item__numberItem" v-if="$index > 4 && $index < 15 && cardNumber.length > $index && n.trim() !== ''">*</div>
                                        <div class="card-item__numberItem" :class="{ '-active' : n.trim() === '' }" :key="$index" v-else-if="cardNumber.length > $index">
                                            {% verbatim %}{{cardNumber[$index]}}{% endverbatim %}
                                        </div>
                                        <div class="card-item__numberItem" :class="{ '-active' : n.trim() === '' }" v-else :key="$index + 1">{% verbatim %}{{n}}{% endverbatim %}</div>
                                    </transition>
                                </span>
                            </template>
                        </label>
                        <div class="card-item__content">
                            <label for="cardName" class="card-item__info" ref="cardName">
                                <div class="card-item__holder">Nom complet</div>
                                <transition name="slide-fade-up">
                                    <div class="card-item__name" v-if="cardName.length" key="1">
                                        <transition-group name="slide-fade-right">
                                            <span class="card-item__nameItem" v-for="(n, $index) in cardName.replace(/\s\s+/g, ' ')" v-if="$index === $index" v-bind:key="$index + 1">{% verbatim %}{{n}}{% endverbatim %}</span>
                                        </transition-group>
                                    </div>
                                    <div class="card-item__name" v-else key="2">John Doe</div>
                                </transition>
                            </label>
                            <div class="card-item__date" ref="cardDate">
                                <label for="cardMonth" class="card-item__dateTitle">Expire</label>
                                <label for="cardMonth" class="card-item__dateItem">
                                    <transition name="slide-fade-up">
                                        <span v-if="cardMonth" v-bind:key="cardMonth">{% verbatim %}{{cardMonth}}{% endverbatim %}</span>
                                        <span v-else key="2">MM</span>
                                    </transition>
                                </label>
                                /
                                <label for="cardYear" class="card-item__dateItem">
                                    <transition name="slide-fade-up">
                                        <span v-if="cardYear" v-bind:key="cardYear">{% verbatim %}{{String(cardYear).slice(2,4)}}{% endverbatim %}</span>
                                        <span v-else key="2">YY</span>
                                    </transition>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-item__side -back">
                    <div class="card-item__cover">
                        <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + currentCardBackground + '.jpeg'" class="card-item__bg">
                    </div>
                    <div class="card-item__band"></div>
                    <div class="card-item__cvv">
                        <div class="card-item__cvvTitle">CVV</div>
                        <div class="card-item__cvvBand">
                            <span v-for="(n, $index) in cardCvv" :key="$index">
                                *
                            </span>

                        </div>
                        <div class="card-item__type">
                            <img v-bind:src="'https://raw.githubusercontent.com/muhammederdem/credit-card-form/master/src/assets/images/' + getCardType + '.png'" v-if="getCardType" class="card-item__typeImg">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-form__inner">
            <div class="card-input">
                <label for="cardNumber" class="card-input__label">Numéros de carte</label>
                <input type="text" id="cardNumber" class="card-input__input" v-mask="generateCardNumberMask" v-model="cardNumber" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardNumber" autocomplete="off">
            </div>
            <div class="card-input">
                <label for="cardName" class="card-input__label">Nom</label>
                <input type="text" id="cardName" class="card-input__input" v-model="cardName" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardName" autocomplete="off">
            </div>
            <div class="card-form__row">
                <div class="card-form__col">
                    <div class="card-form__group">
                        <label for="cardMonth" class="card-input__label">Date d'expiration</label>
                        <select class="card-input__input -select" id="cardMonth" v-model="cardMonth" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardDate">
                            <option value="" disabled selected>Mois</option>
                            <option v-bind:value="n < 10 ? '0' + n : n" v-for="n in 12" v-bind:disabled="n < minCardMonth" v-bind:key="n">
                                {% verbatim %}{{n < 10 ? '0' + n : n}}{% endverbatim %}
                            </option>
                        </select>
                        <select class="card-input__input -select" id="cardYear" v-model="cardYear" v-on:focus="focusInput" v-on:blur="blurInput" data-ref="cardDate">
                            <option value="" disabled selected>Année</option>
                            <option v-bind:value="$index + minCardYear" v-for="(n, $index) in 12" v-bind:key="n">
                                {% verbatim %}{{$index + minCardYear}}{% endverbatim %}
                            </option>
                        </select>
                    </div>
                </div>
                <div class="card-form__col -cvv">
                    <div class="card-input">
                        <label for="cardCvv" class="card-input__label">CVV</label>
                        <input type="text" class="card-input__input" id="cardCvv" v-mask="'####'" maxlength="4" v-model="cardCvv" v-on:focus="flipCard(true)" v-on:blur="flipCard(false)" autocomplete="off">
                    </div>
                </div>
            </div>

            <button class="card-form__button">
                Procéder au paiement
            </button>
        </div>
    </div>

</div>
    </div>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js'></script>
<script src='https://unpkg.com/vue-the-mask@0.11.1/dist/vue-the-mask.js'></script>

                            <script type='text/javascript'>new Vue({
el: "#app",
data() {
return {
currentCardBackground: Math.floor(Math.random() * 25 + 1), // just for fun :D
cardName: "",
cardNumber: "",
cardMonth: "",
cardYear: "",
cardCvv: "",
minCardYear: new Date().getFullYear(),
amexCardMask: "#### ###### #####",
otherCardMask: "#### #### #### ####",
cardNumberTemp: "",
isCardFlipped: false,
focusElementStyle: null,
isInputFocused: false };

},
mounted() {
this.cardNumberTemp = this.otherCardMask;
document.getElementById("cardNumber").focus();
},
computed: {
getCardType() {
let number = this.cardNumber;
let re = new RegExp("^4");
if (number.match(re) != null) return "visa";

re = new RegExp("^(34|37)");
if (number.match(re) != null) return "amex";

re = new RegExp("^5[1-5]");
if (number.match(re) != null) return "mastercard";

re = new RegExp("^6011");
if (number.match(re) != null) return "discover";

re = new RegExp('^9792');
if (number.match(re) != null) return 'troy';

return "visa"; // default type
},
generateCardNumberMask() {
return this.getCardType === "amex" ? this.amexCardMask : this.otherCardMask;
},
minCardMonth() {
if (this.cardYear === this.minCardYear) return new Date().getMonth() + 1;
return 1;
} },

watch: {
cardYear() {
if (this.cardMonth < this.minCardMonth) { this.cardMonth="" ; } } }, methods: { flipCard(status) { this.isCardFlipped=status; }, focusInput(e) { this.isInputFocused=true; let targetRef=e.target.dataset.ref; let target=this.$refs[targetRef]; this.focusElementStyle={ width: `${target.offsetWidth}px`, height: `${target.offsetHeight}px`, transform: `translateX(${target.offsetLeft}px) translateY(${target.offsetTop}px)` }; }, blurInput() { let vm=this; setTimeout(()=> {
    if (!vm.isInputFocused) {
    vm.focusElementStyle = null;
    }
    }, 300);
    vm.isInputFocused = false;
    } } });</script>
</div>
{% endblock %}